version: "3.4"

services:
  zookeeper:
    container_name: cqrs_zookeeper
    image: bitnami/zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "$HOME/docker/volume/zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: cqrs_kafka
    image: bitnami/kafka
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "$HOME/docker/volume/kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper

  kafkamagic: #https://www.kafkamagic.com/start/
    container_name: cqrs_kafkamagic
    image: "digitsy/kafka-magic"
    restart: always
    ports:
      - "8080:80"
    volumes:
      - $HOME/docker/volume/kafkamagic/config:/config
    environment:
      KMAGIC_ALLOW_TOPIC_DELETE: "true"
      KMAGIC_ALLOW_SCHEMA_DELETE: "true"
      KMAGIC_CONFIG_STORE_TYPE: "file"
      KMAGIC_CONFIG_STORE_CONNECTION: "Data Source=/config/KafkaMagicConfig.db;"
      KMAGIC_CONFIG_ENCRYPTION_KEY: "cqrs"

  mongodb:
    container_name: cqrs_mongodb
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - $HOME/docker/volume/mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo123

  sqlserver:
    container_name: cqrs_sqlserver
    image: "mcr.microsoft.com/mssql/server:2017-latest-ubuntu"
    restart: always
    ports:
      - 1433:1433
    volumes:
      # - $HOME/docker/volume/mssql:/var/opt/mssql
      - $HOME/docker/volume/mssql/data:/var/opt/mssql/data
      
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Strong123P@ssw0rd"

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mongo_data:
    driver: local
  sqlserver:
    driver: local

networks:
  default:
    external:
      name: cqrs-network